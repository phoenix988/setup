#!/bin/bash
##____  _                      _      
#|  _ \| |__   ___   ___ _ __ (_)_  __
#| |_) | '_ \ / _ \ / _ \ '_ \| \ \/ /
#|  __/| | | | (_) |  __/ | | | |>  < 
#|_|   |_| |_|\___/ \___|_| |_|_/_/\_\
#                                     
# -*- coding: utf-8 -*-
# NOTE: Firstly I create some switches available
# when you run the script to avoid being asked
# but no worries if you just run the script with no arguments
# it will ask you for input. For example you can choose
# window manager shell etc.

# NOTE: Some switches that are available
# -c for basic install (Basically just terminal applications and my config files)
# -f for full install (Here you get to choose an Window Manager too and gets some other things)
# -w for window manager
# -s for shell
# -d for just my dotfiles,zsh,tmux and starship prompt (good for a server)
# -n for no config files (useful if you already have config files you want to use and dont want to overwrite)


# NOTE: Source Variables and all functions
# So we can get all my functions
# I wrote them in seperate files to try and stay organized
for source in $(ls functions | xargs -n1) ; do
      source functions/$source
done

for source in $(ls variables | xargs -n1) ; do
      source variables/$source
done


while getopts ":w:s:cfdn" opt; do
  case ${opt} in
    c)
     INSTALL_TYPE=basic
     ;;
    f)
     INSTALL_TYPE=full
     ;;
    d)
     DOTFILES_ONLY="y"
     echo "${BLUE}You choose to only get my dotfiles"
     sleep 2
     tput reset
     ;;
    n)
     NO_CONFIG="y"
     ;;
    \?)
      case_text
      exit 1
      ;;
    w)
      case ${OPTARG} in
        "hyprland" )
         WINDOW_MANAGER="$OPTARG"
         echo "${BLUE}You choose to install hyprland"
         sleep 2
         tput reset
          ;;
        "qtile" )
         WINDOW_MANAGER="$OPTARG"
         echo "${BLUE}You choose to install qtile"
         sleep 2
         tput reset
          ;;
         "awesome" )
         WINDOW_MANAGER="$OPTARG"
         echo "${BLUE}You choose to install awesome"
         sleep 2
         tput reset
          ;;

        *)
           echo "${RED}:Invalid value. Please select hyperland, qtile, or awesome."
           exit 1
          ;;
      esac
      ;;
    s)
      case ${OPTARG} in
        "zsh" )
         SHELL_CHOICE="$OPTARG"
          ;;
        "bash" )
         SHELL_CHOICE="$OPTARG"
          ;;
        "fish" )
        SHELL_CHOICE="$OPTARG"
          ;;
        *)
          echo "${RED}:Invalid value. Please select zsh, bash, or fish."
          exit 1
          ;;
      esac
      ;;
    \?)
         case_text
         exit 1
      ;;
    :)
         case_text
         exit 1
      ;;
  esac

done


# NOTE: Install fzf and dialog if not installed
echo "${GREEN}#####################################################"
echo "## Installing 'dialog' and 'fzf' if not installed ##"
echo "#####################################################"
sleep 1;clear
tput reset

command_exist pacman && sudo pacman -Syy --needed --noconfirm dialog fzf zsh || error "failed to install fzf"

# Welcome Message
welcome ; clear

# Asks you one last time if you really wanna continue
Lastchance ; clear

# NOTE: When using -d we will exit here
if [ "$DOTFILES_ONLY" = "y" ] ; then

    # Runs the dotfiles script which clones my dotfiles repo
    # and moves all my configuration files to home
    echo "${GREEN}#########################################################"
    echo "## Getting all my config files and moving them to home ##"
    echo "#########################################################"
    sleep 2
    tput reset
    install_config

    # Everything is done leaving the script
    exit

else

     # Runs the dotfiles script which clones my dotfiles repo
     # and moves all my configuration files to home
     [ NO_CONFIG = "y" ] && echo "${GREEN}#########################################################"
     [ NO_CONFIG = "y" ] && echo "## Getting all my config files and moving them to home ##"
     [ NO_CONFIG = "y" ] && echo "#########################################################"

     sleep 2

     tput reset

     # NOTE: Install my dotfiles unless you used -n
     [ NO_CONFIG = "y" ] || install_config

fi

sleep 1;clear

# Asks what kind of install you want if you
# Didn't use -c or -f
[ -z "$INSTALL_TYPE" ] && do_settings ; clear


# If you didn't choose window manager and choose full install
# Then it will ask you which one you want to install
if [ "$INSTALL_TYPE" = "full" ] ; then

      [ -z "$WINDOW_MANAGER" ] && do_windowmanager

fi

clear

# If you didnt choose shell then it will ask you
[ -z "$SHELL_CHOICE" ] && do_shell

clear

# Asks you which default browser you want
#[ "$INSTALL_TYPE" = "full" ] && do_browser


# Just making some home folders cause why notepad
# Making Documents,Downloads,Pictures and Videos
# If they dont already exist
echo "${GREEN}################################"
echo "## Making common user folders ##"
echo "################################"
home_folders

sleep 1;clear

tput reset
# Installs oh-my-tmux which is a plugin manager for tmux
# Which I really enjoy to use
echo "${GREEN}############################"
echo "## Installing oh my tmux ##"
echo "###########################"
tput reset
install_oh_my_tmux

clear


# Installs pfetch from source cloning the repo
# and runs make install. You can find the function under
# function directory called install
echo "${GREEN}###################################"
echo "## installing pfetch from source ##"
echo "###################################"
sleep 1
tput reset

command_exist pacman && sudo pacman -S --needed --noconfirm base-devel

# only installs if pfetch is not installed
command_exist pfetch || install_pfetch

clear

# Installs paru aur helper if its not installed
echo "${GREEN}#####################"
echo "## installing paru ##"
echo "#####################"
sleep 2
tput reset

clear

# only installs if paru is not installed
command_exist paru || install_paru && echo "Paru is installed"

if [ "$INSTALL_TYPE" = "basic" ] ; then

   command_exist pacman && install_pacman_base

   clear

elif [ "$INSTALL_TYPE" = "full" ] ; then

   command_exist pacman &&  install_pacman_full

   clear

fi

sleep 2

clear

# Change default shell
sudo usermod -s "/usr/bin/$SHELL_CHOICE" $USER
clear

# If you did choose basic install then the script will exit herre
[ "$INSTALL_TYPE" = "basic" ] && exit

clear


# Clone my wallpapers
[ "$INSTALL_TYPE" = "full" ] && wallpaper

clear

[ -d $HOME/.local/share ] || mkdir -p $HOME/.local/share


echo "${GREEN}######################"
echo "## installing fonts ##"
echo "######################"
install_fonts

tput reset


clear

# If you choose qtile then it will go and do things thats specific for
# qtile and xorg this is important because hyprland is based on wayland
# so the dependencies will be diffrent
if [ $WINDOW_MANAGER = "qtile" ] ; then

    # Making a backup if you already have aqtile config
   [ -d $HOME/.config/qtile ] && mv $HOME/.config/qtile $HOME/.config/qtile.bak

   # clones my qtile branch
   git clone -b qtile https://github.com/phoenix988/dotfiles.git $HOME/.config/qtile

    paru -S --needed --noconfirm  qtile-extras xorg-xrandr picom

   # Only installs qtile if needed
   if command_exist qtile ; then

         echo "${YELLOW}Qtile is already installed"
         sleep 1
         tput reset

   else

         echo "${GREEN}######################"
         echo "## installing qtile ##"
         echo "######################"
         paru -S --needed --noconfirm qtile

         tput reset
   fi

   clear

   # If slock is installed it wont install it
   if command_exist slock ; then

         echo "${YELLOW}Slock is already installed"
         sleep 1;clear
         tput reset
   else
         echo "${GREEN}##################################"
         echo "## installing slock from source ##"
         echo "##################################"
         sleep 1;clear
         tput reset

         install_slock
   fi

   clear

elif [ $WINDOW_MANAGER = "hyprland" ] ; then


    paru -S --needed --noconfirm waybar-hyprland-git swaylock swaybg grim wofi awesome-terminal-fonts adobe-source-code-pro-fonts ttf-jetbrains-mono xdg-desktop-portal-hyprland-git wlogout

    sleep 1;clear

   # Only installs qtile if needed
   if command_exist Hyprland ; then

         echo "${YELLOW}Hyprland is already installed"
         sleep 1
         tput reset

   else
         # Installs hyprland
         echo "${GREEN}#########################"
         echo "## installing hyprland ##"
         echo "#########################"

         sleep 1

         paru -S --needed --noconfirm hyprland || error "failed to install hyprland" ; clear

         tput reset
   fi

   clear

elif [ $WINDOW_MANAGER = "awesome" ] ; then



   echo "${GREEN}########################"
   echo "## installing awesome ##"
   echo "########################"



   paru -S --needed --noconfirm awesome lain rofi xorg-xrandr picom awesome-terminal-fonts adobe-source-code-pro-fonts ttf-jetbrains-mono

   # If slock is installed it wont install it
   if command_exist slock ; then

         echo "${YELLOW}Slock is already installed"
         sleep 1;clear
         tput reset
   else
         echo "${GREEN}##################################"
         echo "## installing slock from source ##"
         echo "##################################"
         sleep 1;clear
         tput reset

         install_slock
   fi

   clear


fi

clear

echo "{$GREEN}###########################"
echo "## installing sddm theme ##"
echo "###########################"

clear;sddm_theme;clear
sleep 1
tput reset

echo "${GREEN}##########################"
echo "## installing gtk theme ##"
echo "##########################"

clear; [ -d $HOME/rose-pine ] || GTK_theme

sleep 2;clear

tput reset

# Installs doom emacs
install_doom

clear

sudo systemctl enable sddm

sleep 1;clear

do_restart

sleep 2;clear
echo "${GREEN}#########################"
echo "## Everything is done! ##"
echo "#########################"
