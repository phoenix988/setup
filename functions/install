#!/bin/bash
#This script contains functions to install some of my commonly used programs

# Install qtile from source
install_qtile() { \

[ -d /etc/apt ] && sudo apt install -y python3-pip python3-cairocffi

    pip install xffib
    pip install qtile

    xsession_content=$(printf "[Desktop Entry]\n
    Name=Qtile\n
    Comment=This will start qtile wm\n
    Exec=/usr/bin/qtile start\n
    Type=Application"\n )

    printf '%s\n' "${xsession_content[@]}" | sed '/^ *$/d' > $HOME/qtile.desktop

    sudo mv $HOME/qtile.desktop /usr/share/xsessions

    sudo ln -s $HOME/.local/bin/qtile /usr/bin/qtile

    git clone https://github.com/elParaguayo/qtile-extras.git $HOME/qtile-extras

    cd $HOME/qtile-extras

    sudo python3 setup.py install

    cd -

    rm -rf $HOME/qtile-extras

}


# install btop from source
install_btop() { \

    git clone https://github.com/aristocratos/btop.git $HOME/btop

    cd $HOME/btop

    make && sudo make install

    cd -

    rm -rf $HOME/btop
}

# install muttwizard from source
install_muttwizard() {\

    git clone https://github.com/LukeSmithxyz/mutt-wizard $HOME/mutt-wizard

    cd $HOME/mutt-wizard

    sudo make install

    cd -

    rm -rf $HOME/mutt-wizard

}

# install my build of slock
install_slock() { \

    sudo groupadd nogroup 2> /dev/null


    git clone https://github.com/phoenix988/slock-phoenix.git $HOME/slock

    cd $HOME/slock

    sudo make install

    cd -

    rm -rf $HOME/slock

}



# Install oh-my-tmux
install_oh_my_tmux() { \

     # Clones oh my tmux
     [ -d $HOME/.tmux ] && cp -r $HOME/.tmux $HOME/.tmux.bak
      
     rm -rf $HOME/.tmux
         
     git clone https://github.com/gpakosz/.tmux.git  $HOME/.tmux

     clear

     [ -e $HOME/.tmux.conf ] && cp $HOME/.tmux.conf.bak
     
     rm $HOME/.tmux.conf
  
     ln -s $HOME/.tmux/.tmux.conf $HOME/.tmux.conf

     clear
}

# Install picom jonaburg fork
install_picom() { \

    git clone https://github.com/jonaburg/picom $HOME/picom

    cd $HOME/pciom

    meson --buildtype=release . build

    ninja -C build

    sudo ninja -C build install

    cd -

    rm -rf $HOME/picom

}

# Install pfetch from source
install_pfetch() { \

    git clone https://github.com/dylanaraps/pfetch.git $HOME/pfetch

    cd $HOME/pfetch

    sudo make install

    cd -

    rm -rf $HOME/pfetch

}


# start a portainer instance in docker
install_docker_portainer() {

  docker -v &> /dev/null

  if [ $? = "0" ] ; then
         echo "###########################################################"
         echo "## Installing Portainer agent so you can use this server ##"
         echo "## For docker containers only if its needed              ##"
         echo "###########################################################"
         sleep 2
         portainer_agent=$(sudo docker ps | awk '$NF == "portainer_agent" {print $NF}' 2> /dev/null)

         sudo docker volume create portainer_data_agent

         [ "$portainer_agent" != "portainer_agent" ] && \
         sudo docker run -d -p 9001:9001 --name portainer_agent --restart=always \
         -v /var/run/docker.sock:/var/run/docker.sock  \
         -v portainer_data_agent:/var/lib/docker/volumes portainer/agent
  fi

  sleep 2
  clear

}

# Install paru function
install_paru() {

     git clone https://aur.archlinux.org/paru.git $HOME/paru

     cd $HOME/paru

     makepkg -si

     cd -

     rm -rf $HOME/paru

}


install_fonts() {

     mkdir -p $HOME/.local/share 2> /dev/null
     git clone https://github.com/phoenix988/fonts.git $HOME/.local/share/fonts 2> /dev/null

}
